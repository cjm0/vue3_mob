{
  "extends": "@vue/tsconfig/tsconfig.dom.json",
  "include": [
    "types/*.ts",
    "src/**/*",
    "src/**/*.vue"
  ],
  "exclude": ["src/**/__tests__/*"],
  "compilerOptions": {
    "composite": true, // 使得 ts 项目可以进行增量构建
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",

    "baseUrl": ".", // 工作根目录
    "paths": {
      "@/*": ["./src/*"],
    },

    // @vue/tsconfig/tsconfig.dom.json 配置
    // 指定模块化方案，none, commonjs, amd, umd, system, es6/es2015, es2020, es2022, esnext, node16, nodenext，default: undefined
    // "module": "ESNext",
    // 模块解析策略，默认 classic，node16、nodenext、bundler
    // "moduleResolution": "bundler",
    // 指定编译出来的 js 代码版本，es3, es5, es6/es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022, esnext，default: es5
    // "target": "ESNext",
    // 需要加载的 ts 内置类型，跟三斜线指令作用相同，ES5、ES6、ES2020、ESNext、WebWorker、ScriptHost，default: undefined
    // "lib": ["ES2020", "DOM", "DOM.Iterable"],
    // "strict": true, // 所有严格检查的总开关
    // "alwaysStrict": true, // 确保脚本以严格模式进行解析 use strict
    // "strictNullChecks": true, // 严格检查空值 null、undefined
    // "strictBindCallApply": true, // 严格检查 bind、call、apply
    // "strictFunctionTypes": true, // 严格检查函数类型
    // "strictPropertyInitialization": true, // 严格检查属性初始化

    "noImplicitAny": true, // 禁止隐式的 any 类型
    // "noImplicitThis": true, // 禁止 this 的隐式 any
    // "useUnknownInCatchVariables": true, // 禁止隐式的 unknown
    "isolatedModules": true, // 将每个文件作为单独的模块，不因缺少其他脚本的类型信息而报错
  }
}
